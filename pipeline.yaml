kind: "BuildConfig"
apiVersion: "v1"
metadata:
  name: "build-api-stub"
spec:
  triggers:
    - type: GitHub
      github:
        secret: ra68uhdf98h4tn123
  strategy:
    type: "JenkinsPipeline"
    jenkinsPipelineStrategy:
      jenkinsfile: |-
          pipeline {
              agent {
                  label "maven"
              }
              environment {
                  // This can be nexus3 or nexus2
                  NEXUS_VERSION = "nexus2"
                  // This can be http or https
                  NEXUS_PROTOCOL = "http"
                  // Where your Nexus is running
                  NEXUS_URL = "nexus-cicd.18.184.165.137.nip.io/nexus"
                  // Repository where we will upload the artifact
                  NEXUS_REPOSITORY = "demo-repository"
                  // Jenkins credential id to authenticate to Nexus OSS
                  NEXUS_CREDENTIAL_ID = "nexus-credentials"
              }
              stages {
                  stage("clone code") {
                      steps {
                          script {
                              // Let's clone the source
                              git 'https://github.com/rh-forum-demo-2019/apicurio-modeling.git';
                          }
                      }
                  }
                  stage("mvn build") {
                      steps {
                          configFileProvider([configFile(fileId: 'mvn-nexus-config', variable: 'MAVEN_SETTINGS_XML')]) {
                              dir("apicurio") {
                                  script {
                                      // If you are using Windows then you should use "bat" step
                                      // Since unit testing is out of the scope we skip them
                                      sh "mvn -s $MAVEN_SETTINGS_XML package -DskipTests=true"
                                  }
                              }
                          }
                      }
                  }
                  stage("publish to nexus") {
                      steps {
                          dir("apicurio") {
                              script {
                                  // Read POM xml file using 'readMavenPom' step , this step 'readMavenPom' is included in: https://plugins.jenkins.io/pipeline-utility-steps
                                  pom = readMavenPom file: "pom.xml";
                                  // Find built artifact under target folder
                                  filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                                  // Print some info from the artifact found
                                  echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                                  // Extract the path from the File found
                                  artifactPath0 = filesByGlob[0].path;
                                  artifactPath1 = filesByGlob[1].path;
                                  // Assign to a boolean response verifying If the artifact name exists
                                  artifact0Exists = fileExists artifactPath0
                                  artifact1Exists = fileExists artifactPath1
                                  artifactExists = artifact0Exists && artifact1Exists
                                  if(artifactExists) {
                                      echo "*** File: ${artifactPath0}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                                      echo "*** File: ${artifactPath1}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                                      nexusArtifactUploader(
                                          nexusVersion: NEXUS_VERSION,
                                          protocol: NEXUS_PROTOCOL,
                                          nexusUrl: NEXUS_URL,
                                          groupId: pom.groupId,
                                          version: pom.version,
                                          repository: NEXUS_REPOSITORY,
                                          credentialsId: NEXUS_CREDENTIAL_ID,
                                          artifacts: [
                                              // Artifact generated such as .jar, .ear and .war files.
                                              [artifactId: pom.artifactId,
                                              classifier: 'sources',
                                              file: artifactPath0,
                                              type: pom.packaging],
                                              [artifactId: pom.artifactId,
                                              classifier: '',
                                              file: artifactPath1,
                                              type: pom.packaging],
                                              // Lets upload the pom.xml file for additional information for Transitive dependencies
                                              [artifactId: pom.artifactId,
                                              classifier: '',
                                              file: "pom.xml",
                                              type: "pom"]
                                          ]
                                      );
                                  } else {
                                      error "*** File: ${artifactPath0}, could not be found or";
                                      error "*** File: ${artifactPath1}, could not be found";
                                  }
                              }
                          }
                      }
                  }
              }
          }
